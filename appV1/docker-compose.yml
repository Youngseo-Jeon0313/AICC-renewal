version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - kong
    restart: always
    networks:
      - app-network
      - kong-net

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    restart: always

  kong-database:
    image: postgres:9.6
    container_name: kong-database
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong123!!
    volumes:
      - kong-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  kong-migrations-bootstrap:
    image: kong:latest
    container_name: kong-migrations-bootstrap
    command: kong migrations bootstrap
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong123!!
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

  kong-migrations-up:
    image: kong:latest
    container_name: kong-migrations-up
    command: kong migrations up && kong migrations finish
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong123!!
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

  kong:
    image: kong:latest
    container_name: kong
    user: "kong"
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong123!!
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      TZ: Asia/Seoul
    ports:
      - "5005:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8444:8444"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migrations-bootstrap:
        condition: service_completed_successfully
      kong-migrations-up:
        condition: service_completed_successfully
    restart: always

  konga:
    image: pantsel/konga:latest
    container_name: konga
    networks:
      - kong-net
    environment:
      TOKEN_SECRET: test
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong123!!@kong-database:5432/postgres
      NODE_ENV: development
    ports:
      - "5004:1337"
    volumes:
      - konga-data:/app/kongadata
    depends_on:
      - kong-database
      - kong
    restart: always

networks:
  app-network:
    driver: bridge
  kong-net:
    driver: bridge

volumes:
  redis-data:
  kong-postgres-data:
  konga-data: 