version: '3.8'

services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=aicc
      - MYSQL_USER=rootuser
      - MYSQL_PASSWORD=rootpw
    depends_on:
      - redis
      - mysql
    restart: always
    networks:
      - app-network

  cpu1:
    build: .
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "python -u cpu1.py 2>&1 | tee /app/logs/cpu1.log"
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=aicc
      - MYSQL_USER=rootuser
      - MYSQL_PASSWORD=rootpw
    depends_on:
      - redis
      - mysql
    restart: always
    networks:
      - app-network

  cpu2:
    build: .
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "python -u cpu2.py 2>&1 | tee /app/logs/cpu2.log"
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=aicc
      - MYSQL_USER=rootuser
      - MYSQL_PASSWORD=rootpw
    depends_on:
      - redis
      - mysql
    restart: always
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpw
      - MYSQL_USER=rootuser
      - MYSQL_PASSWORD=rootpw
      - MYSQL_DATABASE=aicc
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "rootuser", "-prootpw"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  mysql-data: